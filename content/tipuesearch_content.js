var tipuesearch = {"pages": [{'title': '網路連線設定', 'text': '正常情況下, 電腦輔助設計室中的電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址 \n \n \n \n', 'tags': '', 'url': '網路連線設定.html'}, {'title': '倉儲改版', 'text': '建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版 可攜程式系統中已經內建 git, 可以在啟動 start.bat 後，透過 path 的設定, 直接執行 git 指令. 建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版. 另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端. git add git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: git commit \xa0 git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.', 'tags': '', 'url': '倉儲改版.html'}, {'title': '期中報告', 'text': '\n', 'tags': '', 'url': '期中報告.html'}, {'title': '期末報告', 'text': '倉儲改版-上 \n VPN-下 \n', 'tags': '', 'url': '期末報告.html'}, {'title': '國旗', 'text': '\n \n \n  以下利用 Brython 程式執行繪圖  \n \n \n \n  以下利用 Brython 程式執行繪圖  \n \n \n', 'tags': '', 'url': '國旗.html'}, {'title': 'VPN', 'text': '\n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'VPN.html'}, {'title': '代理主機', 'text': '虛擬主機 \n \n 網路 \n \n 虛擬主機開機完成的情形 \n \n 下載nginx及查看網路 \n \n 完成 \n \n', 'tags': '', 'url': '代理主機.html'}, {'title': '連接VirtualBox和Filrzilla', 'text': '\n 用 ifconfig 找網址 \n \n 連接完成的情形', 'tags': '', 'url': '連接VirtualBox和Filrzilla.html'}]};